#!/usr/bin/env ruby

require 'rubygems'
require 'nokogiri'

case ARGV[0]
when /^-h$/
    puts " emma.class.num,emma.class.total,emma.method.num,emma.method.total,emma.block.num,emma.block.total,emma.line.num,emma.line.total"
    exit 0
end
cur = ARGV[0]
exit(0) if !File.exists?('coverage/index.html')
html = File.open('coverage/index.html').read
parsed_data = Nokogiri::HTML.parse html
#data=%x[elinks  --dump --dump-width 120 --no-numbering --no-references --dump coverage/index.html 2>/dev/null |tr -cd '[:print:]\n']
#p data

names = ['name', 'class', 'method', 'block', 'line']

data = {}
mydata = {}
num = 0
parsed_data.xpath("//table[2]/tr[2]/td").each do |x|
  text = x.text.force_encoding("ISO-8859-1").encode("utf-8", replace: nil)
  mydata[names[num]] = text.strip.gsub(/\u00a0/, ' ')
  num += 1
end

mydata.keys.each do |m|
  next if m =~ /name/
  case mydata[m]
  when /^([0-9.]+)%[ \t]*\(([.0-9]+)\/([.0-9]+)\)$/
    data[m + '.num'] = $2
    data[m + '.tot'] = $3
  else
    data[m + '.num'] = 0
    data[m + '.tot'] = 0
  end
end

puts "#{cur},#{data['class.num']},#{data['class.tot']},#{data['method.num']},#{data['method.tot']},#{data['block.num']},#{data['block.tot']},#{data['line.num']},#{data['line.tot']}" if data.length > 0

